{
  "version": 4,
  "terraform_version": "1.0.9",
  "serial": 569,
  "lineage": "1b860d41-c8d0-766f-aecf-2ef92e2f7b88",
  "outputs": {
    "workers_servers_ips": {
      "value": {},
      "type": [
        "object",
        {}
      ]
    },
    "workers_servers_status": {
      "value": {},
      "type": [
        "object",
        {}
      ]
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_availability_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "all_availability_zones": null,
            "exclude_names": null,
            "exclude_zone_ids": null,
            "filter": null,
            "group_names": [
              "us-east-1"
            ],
            "id": "us-east-1",
            "names": [
              "us-east-1a",
              "us-east-1b",
              "us-east-1c",
              "us-east-1d",
              "us-east-1e",
              "us-east-1f"
            ],
            "state": null,
            "zone_ids": [
              "use1-az6",
              "use1-az1",
              "use1-az2",
              "use1-az4",
              "use1-az3",
              "use1-az5"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "aws_secretsmanager_secret_version",
      "name": "creds",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:secretsmanager:us-east-1:545389514010:secret:gabate_celery_secrets-LQ2Mrx",
            "id": "gabate_celery_secrets|AWSCURRENT",
            "secret_binary": "",
            "secret_id": "gabate_celery_secrets",
            "secret_string": "{\"rabbitmq_user\":\"af800jf\",\"rabbitmq_passwd\":\"89fq948a89fqp\",\"redis_user\":\"d9jfa4jf\",\"redis_passwd\":\"jf4j920j3f28zn4\",\"rom_gpg_key\":\"9hfds9hfsd9hn2fonos\",\"aws_api_key\":\"AKIAX5657RUNDY6W2WYF\",\"aws_secret_key\":\"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\"}",
            "version_id": "bd62ccb3-2b85-44a7-a5b8-d68ce7f71a5f",
            "version_stage": "AWSCURRENT",
            "version_stages": [
              "AWSCURRENT"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_cloudinit_config",
      "name": "config",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64_encode": false,
            "gzip": false,
            "id": "100524599",
            "part": [
              {
                "content": "#!/bin/bash\necho 'TODO FIXME' \u003e /opt/redis_ip\necho 'TODO FIXME' \u003e /opt/rabbitmq_ip\n\necho 'af800jf' \u003e /opt/rabbitmq_user\necho '89fq948a89fqp' \u003e /opt/rabbitmq_passwd\n\necho 'd9jfa4jf' \u003e /opt/redis_user\necho 'jf4j920j3f28zn4' \u003e /opt/redis_passwd\n\necho '9hfds9hfsd9hn2fonos' \u003e /opt/rom_gpg_key\n\necho 'AKIAX5657RUNDY6W2WYF' \u003e /opt/aws_api_key\necho 'sgoR9vdJ4yehfToiy3s8cOu0a5jtyN2HGin5BXNT' \u003e /opt/aws_secret_key\n",
                "content_type": "text/x-shellscript",
                "filename": "",
                "merge_type": ""
              },
              {
                "content": "#!/bin/bash\n\ncd /home/devops/\n\n# Setup worker secrets\ntouch .env\necho \"BROKER_URL=pyamqp://$(cat /opt/rabbitmq_user):$(cat /opt/rabbitmq_passwd)@$(cat /opt/rabbitmq_ip)\" \u003e\u003e .env\necho \"RESULT_BACKEND=redis://$(cat /opt/redis_user):$(cat /opt/redis_passwd)@$(cat /opt/redis_ip)\" \u003e\u003e .env\n\n# Setup aws credentials\nmkdir .aws\necho \"[default]\naws_access_key_id = $(cat /opt/aws_api_key)\naws_secret_access_key = $(cat /opt/aws_secret_key)\\\n\" \u003e .aws/credentials\n\nchown -R devops:devops /home/devops/.aws/\n",
                "content_type": "text/x-shellscript",
                "filename": "",
                "merge_type": ""
              },
              {
                "content": "#cloud-config\nusers:\n  - name: devops\n    groups: users, admin\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    shell: /bin/bash\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7E75JwR78Zj0AGf0Hk9VqAs9e37+yOPNNssEdbHM3Uh15BvoHqDTfr8zRO3OsiWBeFmIR0KH8qdwraj1DGGsvnDAwDbi1mQH6V4e/9U269oBFJWKiLAxLUStyRGwK2EZOJvKjT6coic0Hck6I+LUp8QQRMZT8B4UJVk6N4nq0bg0v23dGUm6ULfrMHdJlLGde8Eb+ln/CWjOQXP/4G2UAOGi5PLlftqqJnqsGDS+MfCmNofifjq6NnF65i9JWkrfEVye3Ny3jwEEkBOaojtv9atjE+ExCsmH2BbJYAjEKNjamQwJkJ4iteGZEm88JCOkzRDr0ZEbgac4l7snbRTWt+2rz0UFnzYj00iAnrvQRh1OGgopspSZr7VJEvqdajO24PB7EuNVhG/y4mCpQ7ui1zFLF7X8s1/l6BXuCquiMOtldas5WzgAi1BiyOY3dj6iSEiR182asOsv/VRmmoQGIWQWU1qDQ7fvNCr+qKqSllslkJDb1MMgUumRiCKUI2VrdHt2tKuoHIKxR3zrHAhRe7gDCokPACFUcqOwL6wgFhtqtKJ1EzVl8yQBngnmaPDH/VGUHFhWU6i13hW76B1I/hhdI670l0YyJlsscxpBzWtHlgqTRzNX0l9LpWZhBXkKMluAH0JVy1fOfOs/zHJwqEkCmdDQyuuzN0z/B4PCCGQ== renanssilva@MacBook-Pro.local\npackage_update: true\npackage_upgrade: true\npackages:\n  - git\n  - vim\n  - neovim\n  - gcc\n  - make\n  - cmake\n  - awscli\n  - libsdl2-dev\n  - libsdl2-ttf-dev\nruncmd:\n  - cd /home/devops\n  - touch BOOTSTRAP_STARTED\n  - echo \"sudo tail -f -n25 /var/log/cloud-init-output.log\" \u003e ./tail_log.sh\n  - echo \"sudo less /var/log/cloud-init-output.log\" \u003e ./less_log.sh\n  - su devops -c \"echo 'PATH=/home/devops/.local/bin:$PATH' \u003e\u003e ~/.bashrc\"\n  - su devops -c \"echo 'PATH=/home/devops/.poetry/bin:$PATH' \u003e\u003e ~/.bashrc\"\n\n    # Python 3.10 setup\n  - apt install software-properties-common -y\n  - add-apt-repository ppa:deadsnakes/ppa -y\n  - apt update\n  - apt install python3.10-full -y\n  - su devops -c \"python3.10 -m ensurepip --upgrade\"\n  - su devops -c \"python3.10 -m pip install --upgrade pip\"\n\n    # Get gabate\n  - git clone 'https://github.com/h3nnn4n/gabate'\n  - chown -R devops:devops gabate\n  - cd gabate\n\n    ## Gabate deps\n  - git submodule update --init --recursive\n  - cd deps/pcg-c/ \u0026\u0026 make -j 4 \u0026\u0026 cd -\n  - cd deps/cJSON/ \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 cmake .. \u0026\u0026 make -j 4 \u0026\u0026 cd ../../../\n\n    ## Build gabate\n  - make -j 4\n\n    # Get rom\n  - cd roms\n  - su devops -c \"aws s3 sync s3://gabate-roms/games/ .\"\n  - gpg --passphrase-file /opt/rom_gpg_key --batch --yes --decrypt tetris.gb.gpg \u003e tetris.gb\n  - cd ..\n\n    # Instal poetry and project deps\n  - su devops -c \"curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3.10 - \"\n  - su devops -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry install\"\n  - su devops -c \"cd /home/devops/gabate/trainer/ \u0026\u0026 /home/devops/.poetry/bin/poetry install\"\n\n    # Get credentials\n  - cp -v /home/devops/.env /home/devops/gabate/trainer/.env\n  - cp -v /home/devops/.env /home/devops/gabate/worker/.env\n\n    # Worker setup\n  - cd /home/gabate/worker/\n\n    # Start worker\n  - su devops -l -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry run celery -A tasks worker --loglevel=INFO --detach -f celery.logs\"\n  - touch /home/devops/BOOTSTRAP_DONE\n",
                "content_type": "text/cloud-config",
                "filename": "",
                "merge_type": ""
              }
            ],
            "rendered": "Content-Type: multipart/mixed; boundary=\"MIMEBOUNDARY\"\nMIME-Version: 1.0\r\n\r\n--MIMEBOUNDARY\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/x-shellscript\r\nMime-Version: 1.0\r\n\r\n#!/bin/bash\necho 'TODO FIXME' \u003e /opt/redis_ip\necho 'TODO FIXME' \u003e /opt/rabbitmq_ip\n\necho 'af800jf' \u003e /opt/rabbitmq_user\necho '89fq948a89fqp' \u003e /opt/rabbitmq_passwd\n\necho 'd9jfa4jf' \u003e /opt/redis_user\necho 'jf4j920j3f28zn4' \u003e /opt/redis_passwd\n\necho '9hfds9hfsd9hn2fonos' \u003e /opt/rom_gpg_key\n\necho 'AKIAX5657RUNDY6W2WYF' \u003e /opt/aws_api_key\necho 'sgoR9vdJ4yehfToiy3s8cOu0a5jtyN2HGin5BXNT' \u003e /opt/aws_secret_key\n\r\n--MIMEBOUNDARY\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/x-shellscript\r\nMime-Version: 1.0\r\n\r\n#!/bin/bash\n\ncd /home/devops/\n\n# Setup worker secrets\ntouch .env\necho \"BROKER_URL=pyamqp://$(cat /opt/rabbitmq_user):$(cat /opt/rabbitmq_passwd)@$(cat /opt/rabbitmq_ip)\" \u003e\u003e .env\necho \"RESULT_BACKEND=redis://$(cat /opt/redis_user):$(cat /opt/redis_passwd)@$(cat /opt/redis_ip)\" \u003e\u003e .env\n\n# Setup aws credentials\nmkdir .aws\necho \"[default]\naws_access_key_id = $(cat /opt/aws_api_key)\naws_secret_access_key = $(cat /opt/aws_secret_key)\\\n\" \u003e .aws/credentials\n\nchown -R devops:devops /home/devops/.aws/\n\r\n--MIMEBOUNDARY\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/cloud-config\r\nMime-Version: 1.0\r\n\r\n#cloud-config\nusers:\n  - name: devops\n    groups: users, admin\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    shell: /bin/bash\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7E75JwR78Zj0AGf0Hk9VqAs9e37+yOPNNssEdbHM3Uh15BvoHqDTfr8zRO3OsiWBeFmIR0KH8qdwraj1DGGsvnDAwDbi1mQH6V4e/9U269oBFJWKiLAxLUStyRGwK2EZOJvKjT6coic0Hck6I+LUp8QQRMZT8B4UJVk6N4nq0bg0v23dGUm6ULfrMHdJlLGde8Eb+ln/CWjOQXP/4G2UAOGi5PLlftqqJnqsGDS+MfCmNofifjq6NnF65i9JWkrfEVye3Ny3jwEEkBOaojtv9atjE+ExCsmH2BbJYAjEKNjamQwJkJ4iteGZEm88JCOkzRDr0ZEbgac4l7snbRTWt+2rz0UFnzYj00iAnrvQRh1OGgopspSZr7VJEvqdajO24PB7EuNVhG/y4mCpQ7ui1zFLF7X8s1/l6BXuCquiMOtldas5WzgAi1BiyOY3dj6iSEiR182asOsv/VRmmoQGIWQWU1qDQ7fvNCr+qKqSllslkJDb1MMgUumRiCKUI2VrdHt2tKuoHIKxR3zrHAhRe7gDCokPACFUcqOwL6wgFhtqtKJ1EzVl8yQBngnmaPDH/VGUHFhWU6i13hW76B1I/hhdI670l0YyJlsscxpBzWtHlgqTRzNX0l9LpWZhBXkKMluAH0JVy1fOfOs/zHJwqEkCmdDQyuuzN0z/B4PCCGQ== renanssilva@MacBook-Pro.local\npackage_update: true\npackage_upgrade: true\npackages:\n  - git\n  - vim\n  - neovim\n  - gcc\n  - make\n  - cmake\n  - awscli\n  - libsdl2-dev\n  - libsdl2-ttf-dev\nruncmd:\n  - cd /home/devops\n  - touch BOOTSTRAP_STARTED\n  - echo \"sudo tail -f -n25 /var/log/cloud-init-output.log\" \u003e ./tail_log.sh\n  - echo \"sudo less /var/log/cloud-init-output.log\" \u003e ./less_log.sh\n  - su devops -c \"echo 'PATH=/home/devops/.local/bin:$PATH' \u003e\u003e ~/.bashrc\"\n  - su devops -c \"echo 'PATH=/home/devops/.poetry/bin:$PATH' \u003e\u003e ~/.bashrc\"\n\n    # Python 3.10 setup\n  - apt install software-properties-common -y\n  - add-apt-repository ppa:deadsnakes/ppa -y\n  - apt update\n  - apt install python3.10-full -y\n  - su devops -c \"python3.10 -m ensurepip --upgrade\"\n  - su devops -c \"python3.10 -m pip install --upgrade pip\"\n\n    # Get gabate\n  - git clone 'https://github.com/h3nnn4n/gabate'\n  - chown -R devops:devops gabate\n  - cd gabate\n\n    ## Gabate deps\n  - git submodule update --init --recursive\n  - cd deps/pcg-c/ \u0026\u0026 make -j 4 \u0026\u0026 cd -\n  - cd deps/cJSON/ \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 cmake .. \u0026\u0026 make -j 4 \u0026\u0026 cd ../../../\n\n    ## Build gabate\n  - make -j 4\n\n    # Get rom\n  - cd roms\n  - su devops -c \"aws s3 sync s3://gabate-roms/games/ .\"\n  - gpg --passphrase-file /opt/rom_gpg_key --batch --yes --decrypt tetris.gb.gpg \u003e tetris.gb\n  - cd ..\n\n    # Instal poetry and project deps\n  - su devops -c \"curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3.10 - \"\n  - su devops -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry install\"\n  - su devops -c \"cd /home/devops/gabate/trainer/ \u0026\u0026 /home/devops/.poetry/bin/poetry install\"\n\n    # Get credentials\n  - cp -v /home/devops/.env /home/devops/gabate/trainer/.env\n  - cp -v /home/devops/.env /home/devops/gabate/worker/.env\n\n    # Worker setup\n  - cd /home/gabate/worker/\n\n    # Start worker\n  - su devops -l -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry run celery -A tasks worker --loglevel=INFO --detach -f celery.logs\"\n  - touch /home/devops/BOOTSTRAP_DONE\n\r\n--MIMEBOUNDARY--\r\n"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "part"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "content"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "setup_worker_env",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "ec346642f954166140d940d066bb012602166c622ec57e4ca32ba199322034a7",
            "rendered": "#!/bin/bash\n\ncd /home/devops/\n\n# Setup worker secrets\ntouch .env\necho \"BROKER_URL=pyamqp://$(cat /opt/rabbitmq_user):$(cat /opt/rabbitmq_passwd)@$(cat /opt/rabbitmq_ip)\" \u003e\u003e .env\necho \"RESULT_BACKEND=redis://$(cat /opt/redis_user):$(cat /opt/redis_passwd)@$(cat /opt/redis_ip)\" \u003e\u003e .env\n\n# Setup aws credentials\nmkdir .aws\necho \"[default]\naws_access_key_id = $(cat /opt/aws_api_key)\naws_secret_access_key = $(cat /opt/aws_secret_key)\\\n\" \u003e .aws/credentials\n\nchown -R devops:devops /home/devops/.aws/\n",
            "template": "#!/bin/bash\n\ncd /home/devops/\n\n# Setup worker secrets\ntouch .env\necho \"BROKER_URL=pyamqp://$(cat /opt/rabbitmq_user):$(cat /opt/rabbitmq_passwd)@$(cat /opt/rabbitmq_ip)\" \u003e\u003e .env\necho \"RESULT_BACKEND=redis://$(cat /opt/redis_user):$(cat /opt/redis_passwd)@$(cat /opt/redis_ip)\" \u003e\u003e .env\n\n# Setup aws credentials\nmkdir .aws\necho \"[default]\naws_access_key_id = $(cat /opt/aws_api_key)\naws_secret_access_key = $(cat /opt/aws_secret_key)\\\n\" \u003e .aws/credentials\n\nchown -R devops:devops /home/devops/.aws/\n",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "user_data",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "75ec0e28668adf8fb232a5afe7cd5b8e61319886daf5ccce355961e8f2288717",
            "rendered": "#cloud-config\nusers:\n  - name: devops\n    groups: users, admin\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    shell: /bin/bash\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7E75JwR78Zj0AGf0Hk9VqAs9e37+yOPNNssEdbHM3Uh15BvoHqDTfr8zRO3OsiWBeFmIR0KH8qdwraj1DGGsvnDAwDbi1mQH6V4e/9U269oBFJWKiLAxLUStyRGwK2EZOJvKjT6coic0Hck6I+LUp8QQRMZT8B4UJVk6N4nq0bg0v23dGUm6ULfrMHdJlLGde8Eb+ln/CWjOQXP/4G2UAOGi5PLlftqqJnqsGDS+MfCmNofifjq6NnF65i9JWkrfEVye3Ny3jwEEkBOaojtv9atjE+ExCsmH2BbJYAjEKNjamQwJkJ4iteGZEm88JCOkzRDr0ZEbgac4l7snbRTWt+2rz0UFnzYj00iAnrvQRh1OGgopspSZr7VJEvqdajO24PB7EuNVhG/y4mCpQ7ui1zFLF7X8s1/l6BXuCquiMOtldas5WzgAi1BiyOY3dj6iSEiR182asOsv/VRmmoQGIWQWU1qDQ7fvNCr+qKqSllslkJDb1MMgUumRiCKUI2VrdHt2tKuoHIKxR3zrHAhRe7gDCokPACFUcqOwL6wgFhtqtKJ1EzVl8yQBngnmaPDH/VGUHFhWU6i13hW76B1I/hhdI670l0YyJlsscxpBzWtHlgqTRzNX0l9LpWZhBXkKMluAH0JVy1fOfOs/zHJwqEkCmdDQyuuzN0z/B4PCCGQ== renanssilva@MacBook-Pro.local\npackage_update: true\npackage_upgrade: true\npackages:\n  - git\n  - vim\n  - neovim\n  - gcc\n  - make\n  - cmake\n  - awscli\n  - libsdl2-dev\n  - libsdl2-ttf-dev\nruncmd:\n  - cd /home/devops\n  - touch BOOTSTRAP_STARTED\n  - echo \"sudo tail -f -n25 /var/log/cloud-init-output.log\" \u003e ./tail_log.sh\n  - echo \"sudo less /var/log/cloud-init-output.log\" \u003e ./less_log.sh\n  - su devops -c \"echo 'PATH=/home/devops/.local/bin:$PATH' \u003e\u003e ~/.bashrc\"\n  - su devops -c \"echo 'PATH=/home/devops/.poetry/bin:$PATH' \u003e\u003e ~/.bashrc\"\n\n    # Python 3.10 setup\n  - apt install software-properties-common -y\n  - add-apt-repository ppa:deadsnakes/ppa -y\n  - apt update\n  - apt install python3.10-full -y\n  - su devops -c \"python3.10 -m ensurepip --upgrade\"\n  - su devops -c \"python3.10 -m pip install --upgrade pip\"\n\n    # Get gabate\n  - git clone 'https://github.com/h3nnn4n/gabate'\n  - chown -R devops:devops gabate\n  - cd gabate\n\n    ## Gabate deps\n  - git submodule update --init --recursive\n  - cd deps/pcg-c/ \u0026\u0026 make -j 4 \u0026\u0026 cd -\n  - cd deps/cJSON/ \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 cmake .. \u0026\u0026 make -j 4 \u0026\u0026 cd ../../../\n\n    ## Build gabate\n  - make -j 4\n\n    # Get rom\n  - cd roms\n  - su devops -c \"aws s3 sync s3://gabate-roms/games/ .\"\n  - gpg --passphrase-file /opt/rom_gpg_key --batch --yes --decrypt tetris.gb.gpg \u003e tetris.gb\n  - cd ..\n\n    # Instal poetry and project deps\n  - su devops -c \"curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3.10 - \"\n  - su devops -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry install\"\n  - su devops -c \"cd /home/devops/gabate/trainer/ \u0026\u0026 /home/devops/.poetry/bin/poetry install\"\n\n    # Get credentials\n  - cp -v /home/devops/.env /home/devops/gabate/trainer/.env\n  - cp -v /home/devops/.env /home/devops/gabate/worker/.env\n\n    # Worker setup\n  - cd /home/gabate/worker/\n\n    # Start worker\n  - su devops -l -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry run celery -A tasks worker --loglevel=INFO --detach -f celery.logs\"\n  - touch /home/devops/BOOTSTRAP_DONE\n",
            "template": "#cloud-config\nusers:\n  - name: devops\n    groups: users, admin\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    shell: /bin/bash\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7E75JwR78Zj0AGf0Hk9VqAs9e37+yOPNNssEdbHM3Uh15BvoHqDTfr8zRO3OsiWBeFmIR0KH8qdwraj1DGGsvnDAwDbi1mQH6V4e/9U269oBFJWKiLAxLUStyRGwK2EZOJvKjT6coic0Hck6I+LUp8QQRMZT8B4UJVk6N4nq0bg0v23dGUm6ULfrMHdJlLGde8Eb+ln/CWjOQXP/4G2UAOGi5PLlftqqJnqsGDS+MfCmNofifjq6NnF65i9JWkrfEVye3Ny3jwEEkBOaojtv9atjE+ExCsmH2BbJYAjEKNjamQwJkJ4iteGZEm88JCOkzRDr0ZEbgac4l7snbRTWt+2rz0UFnzYj00iAnrvQRh1OGgopspSZr7VJEvqdajO24PB7EuNVhG/y4mCpQ7ui1zFLF7X8s1/l6BXuCquiMOtldas5WzgAi1BiyOY3dj6iSEiR182asOsv/VRmmoQGIWQWU1qDQ7fvNCr+qKqSllslkJDb1MMgUumRiCKUI2VrdHt2tKuoHIKxR3zrHAhRe7gDCokPACFUcqOwL6wgFhtqtKJ1EzVl8yQBngnmaPDH/VGUHFhWU6i13hW76B1I/hhdI670l0YyJlsscxpBzWtHlgqTRzNX0l9LpWZhBXkKMluAH0JVy1fOfOs/zHJwqEkCmdDQyuuzN0z/B4PCCGQ== renanssilva@MacBook-Pro.local\npackage_update: true\npackage_upgrade: true\npackages:\n  - git\n  - vim\n  - neovim\n  - gcc\n  - make\n  - cmake\n  - awscli\n  - libsdl2-dev\n  - libsdl2-ttf-dev\nruncmd:\n  - cd /home/devops\n  - touch BOOTSTRAP_STARTED\n  - echo \"sudo tail -f -n25 /var/log/cloud-init-output.log\" \u003e ./tail_log.sh\n  - echo \"sudo less /var/log/cloud-init-output.log\" \u003e ./less_log.sh\n  - su devops -c \"echo 'PATH=/home/devops/.local/bin:$PATH' \u003e\u003e ~/.bashrc\"\n  - su devops -c \"echo 'PATH=/home/devops/.poetry/bin:$PATH' \u003e\u003e ~/.bashrc\"\n\n    # Python 3.10 setup\n  - apt install software-properties-common -y\n  - add-apt-repository ppa:deadsnakes/ppa -y\n  - apt update\n  - apt install python3.10-full -y\n  - su devops -c \"python3.10 -m ensurepip --upgrade\"\n  - su devops -c \"python3.10 -m pip install --upgrade pip\"\n\n    # Get gabate\n  - git clone 'https://github.com/h3nnn4n/gabate'\n  - chown -R devops:devops gabate\n  - cd gabate\n\n    ## Gabate deps\n  - git submodule update --init --recursive\n  - cd deps/pcg-c/ \u0026\u0026 make -j 4 \u0026\u0026 cd -\n  - cd deps/cJSON/ \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 cmake .. \u0026\u0026 make -j 4 \u0026\u0026 cd ../../../\n\n    ## Build gabate\n  - make -j 4\n\n    # Get rom\n  - cd roms\n  - su devops -c \"aws s3 sync s3://gabate-roms/games/ .\"\n  - gpg --passphrase-file /opt/rom_gpg_key --batch --yes --decrypt tetris.gb.gpg \u003e tetris.gb\n  - cd ..\n\n    # Instal poetry and project deps\n  - su devops -c \"curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3.10 - \"\n  - su devops -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry install\"\n  - su devops -c \"cd /home/devops/gabate/trainer/ \u0026\u0026 /home/devops/.poetry/bin/poetry install\"\n\n    # Get credentials\n  - cp -v /home/devops/.env /home/devops/gabate/trainer/.env\n  - cp -v /home/devops/.env /home/devops/gabate/worker/.env\n\n    # Worker setup\n  - cd /home/gabate/worker/\n\n    # Start worker\n  - su devops -l -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry run celery -A tasks worker --loglevel=INFO --detach -f celery.logs\"\n  - touch /home/devops/BOOTSTRAP_DONE\n",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_elasticache_cluster",
      "name": "redis",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "apply_immediately": true,
            "arn": "arn:aws:elasticache:us-east-1:545389514010:cluster:gabate",
            "availability_zone": "us-east-1a",
            "az_mode": "single-az",
            "cache_nodes": [
              {
                "address": "gabate.4mwunh.0001.use1.cache.amazonaws.com",
                "availability_zone": "us-east-1a",
                "id": "0001",
                "port": 6379
              }
            ],
            "cluster_address": null,
            "cluster_id": "gabate",
            "configuration_endpoint": null,
            "engine": "redis",
            "engine_version": "6.x",
            "engine_version_actual": "6.0.5",
            "final_snapshot_identifier": null,
            "id": "gabate",
            "maintenance_window": "wed:03:30-wed:04:30",
            "node_type": "cache.t2.micro",
            "notification_topic_arn": null,
            "num_cache_nodes": 1,
            "parameter_group_name": "default.redis6.x",
            "port": 6379,
            "preferred_availability_zones": null,
            "replication_group_id": null,
            "security_group_ids": [],
            "security_group_names": [],
            "snapshot_arns": null,
            "snapshot_name": null,
            "snapshot_retention_limit": 0,
            "snapshot_window": "05:30-06:30",
            "subnet_group_name": "gabate-cache-subnet",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_elasticache_subnet_group.default",
            "aws_subnet.default",
            "aws_vpc.default",
            "data.aws_availability_zones.available"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_elasticache_subnet_group",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:elasticache:us-east-1:545389514010:subnetgroup:gabate-cache-subnet",
            "description": "Managed by Terraform",
            "id": "gabate-cache-subnet",
            "name": "gabate-cache-subnet",
            "subnet_ids": [
              "subnet-0bdc21b1b84fd942b"
            ],
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_subnet.default",
            "aws_vpc.default",
            "data.aws_availability_zones.available"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:545389514010:internet-gateway/igw-08aeb5b101c8ed721",
            "id": "igw-08aeb5b101c8ed721",
            "owner_id": "545389514010",
            "tags": null,
            "tags_all": {},
            "vpc_id": "vpc-00f088d3f55f37a01"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "aws_vpc.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route",
      "name": "internet_access",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "carrier_gateway_id": "",
            "destination_cidr_block": "0.0.0.0/0",
            "destination_ipv6_cidr_block": "",
            "destination_prefix_list_id": "",
            "egress_only_gateway_id": "",
            "gateway_id": "igw-08aeb5b101c8ed721",
            "id": "r-rtb-04c1963f2b102e5d31080289494",
            "instance_id": "",
            "instance_owner_id": "",
            "local_gateway_id": "",
            "nat_gateway_id": "",
            "network_interface_id": "",
            "origin": "CreateRoute",
            "route_table_id": "rtb-04c1963f2b102e5d3",
            "state": "active",
            "timeouts": null,
            "transit_gateway_id": "",
            "vpc_endpoint_id": "",
            "vpc_peering_connection_id": ""
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_internet_gateway.default",
            "aws_vpc.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:545389514010:security-group/sg-09e8684b0d7675996",
            "description": "Managed by Terraform",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-09e8684b0d7675996",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "name": "gabate20211030120339585100000001",
            "name_prefix": "gabate",
            "owner_id": "545389514010",
            "revoke_rules_on_delete": false,
            "tags": null,
            "tags_all": {},
            "timeouts": null,
            "vpc_id": "vpc-00f088d3f55f37a01"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_vpc.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:545389514010:subnet/subnet-0bdc21b1b84fd942b",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "availability_zone_id": "use1-az6",
            "cidr_block": "10.1.1.0/24",
            "customer_owned_ipv4_pool": "",
            "id": "subnet-0bdc21b1b84fd942b",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "545389514010",
            "tags": null,
            "tags_all": {},
            "timeouts": null,
            "vpc_id": "vpc-00f088d3f55f37a01"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.default",
            "data.aws_availability_zones.available"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_vpc",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:545389514010:vpc/vpc-00f088d3f55f37a01",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.1.0.0/16",
            "default_network_acl_id": "acl-01a4cb4e872500cda",
            "default_route_table_id": "rtb-04c1963f2b102e5d3",
            "default_security_group_id": "sg-05a3712e3da54181f",
            "dhcp_options_id": "dopt-99dc1ee3",
            "enable_classiclink": false,
            "enable_classiclink_dns_support": false,
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "id": "vpc-00f088d3f55f37a01",
            "instance_tenancy": "default",
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "main_route_table_id": "rtb-04c1963f2b102e5d3",
            "owner_id": "545389514010",
            "tags": null,
            "tags_all": {}
          },
          "sensitive_attributes": [],
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcloud_ssh_key",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "fingerprint": "18:8a:5b:c8:46:e8:f6:12:66:6b:00:ff:46:6f:cb:f7",
            "id": "4725384",
            "labels": {},
            "name": "hetzner_key",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7E75JwR78Zj0AGf0Hk9VqAs9e37+yOPNNssEdbHM3Uh15BvoHqDTfr8zRO3OsiWBeFmIR0KH8qdwraj1DGGsvnDAwDbi1mQH6V4e/9U269oBFJWKiLAxLUStyRGwK2EZOJvKjT6coic0Hck6I+LUp8QQRMZT8B4UJVk6N4nq0bg0v23dGUm6ULfrMHdJlLGde8Eb+ln/CWjOQXP/4G2UAOGi5PLlftqqJnqsGDS+MfCmNofifjq6NnF65i9JWkrfEVye3Ny3jwEEkBOaojtv9atjE+ExCsmH2BbJYAjEKNjamQwJkJ4iteGZEm88JCOkzRDr0ZEbgac4l7snbRTWt+2rz0UFnzYj00iAnrvQRh1OGgopspSZr7VJEvqdajO24PB7EuNVhG/y4mCpQ7ui1zFLF7X8s1/l6BXuCquiMOtldas5WzgAi1BiyOY3dj6iSEiR182asOsv/VRmmoQGIWQWU1qDQ7fvNCr+qKqSllslkJDb1MMgUumRiCKUI2VrdHt2tKuoHIKxR3zrHAhRe7gDCokPACFUcqOwL6wgFhtqtKJ1EzVl8yQBngnmaPDH/VGUHFhWU6i13hW76B1I/hhdI670l0YyJlsscxpBzWtHlgqTRzNX0l9LpWZhBXkKMluAH0JVy1fOfOs/zHJwqEkCmdDQyuuzN0z/B4PCCGQ== renanssilva@MacBook-Pro.local\n"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
