{
  "version": 4,
  "terraform_version": "1.0.9",
  "serial": 361,
  "lineage": "1b860d41-c8d0-766f-aecf-2ef92e2f7b88",
  "outputs": {
    "db_server_ip": {
      "value": "116.203.218.217",
      "type": "string"
    },
    "db_server_status": {
      "value": "running",
      "type": "string"
    },
    "workers_servers_ips": {
      "value": {
        "worker-0": "116.203.179.134"
      },
      "type": [
        "object",
        {
          "worker-0": "string"
        }
      ]
    },
    "workers_servers_status": {
      "value": {
        "worker-0": "running"
      },
      "type": [
        "object",
        {
          "worker-0": "string"
        }
      ]
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_secretsmanager_secret_version",
      "name": "creds",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:secretsmanager:us-east-1:545389514010:secret:gabate_celery_secrets-LQ2Mrx",
            "id": "gabate_celery_secrets|AWSCURRENT",
            "secret_binary": "",
            "secret_id": "gabate_celery_secrets",
            "secret_string": "{\"rabbitmq_user\":\"af800jf\",\"rabbitmq_passwd\":\"89fq948a89fqp\",\"redis_user\":\"d9jfa4jf\",\"redis_passwd\":\"jf4j920j3f28zn4\"}",
            "version_id": "aa539fe6-4006-418d-9240-f81a8e6ba72e",
            "version_stage": "AWSCURRENT",
            "version_stages": [
              "AWSCURRENT"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_cloudinit_config",
      "name": "config",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64_encode": false,
            "gzip": false,
            "id": "3360572097",
            "part": [
              {
                "content": "#!/bin/bash\necho '116.203.218.217' \u003e /opt/db_server_ip\necho 'af800jf' \u003e /opt/rabbitmq_user\necho '89fq948a89fqp' \u003e /opt/rabbitmq_passwd\n",
                "content_type": "text/x-shellscript",
                "filename": "",
                "merge_type": ""
              },
              {
                "content": "#!/bin/bash\n\ncd /home/devops/\n\n# Setup secrets\ntouch .env\necho \"BROKER_URL=pyamqp://$(cat /opt/rabbitmq_user):$(cat /opt/rabbitmq_passwd)@$(cat /opt/db_server_ip)\" \u003e\u003e .env\necho \"RESULT_BACKEND=redis://$(cat /opt/db_server_ip)\" \u003e\u003e .env\n",
                "content_type": "text/x-shellscript",
                "filename": "",
                "merge_type": ""
              },
              {
                "content": "#cloud-config\nusers:\n  - name: devops\n    groups: users, admin\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    shell: /bin/bash\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7E75JwR78Zj0AGf0Hk9VqAs9e37+yOPNNssEdbHM3Uh15BvoHqDTfr8zRO3OsiWBeFmIR0KH8qdwraj1DGGsvnDAwDbi1mQH6V4e/9U269oBFJWKiLAxLUStyRGwK2EZOJvKjT6coic0Hck6I+LUp8QQRMZT8B4UJVk6N4nq0bg0v23dGUm6ULfrMHdJlLGde8Eb+ln/CWjOQXP/4G2UAOGi5PLlftqqJnqsGDS+MfCmNofifjq6NnF65i9JWkrfEVye3Ny3jwEEkBOaojtv9atjE+ExCsmH2BbJYAjEKNjamQwJkJ4iteGZEm88JCOkzRDr0ZEbgac4l7snbRTWt+2rz0UFnzYj00iAnrvQRh1OGgopspSZr7VJEvqdajO24PB7EuNVhG/y4mCpQ7ui1zFLF7X8s1/l6BXuCquiMOtldas5WzgAi1BiyOY3dj6iSEiR182asOsv/VRmmoQGIWQWU1qDQ7fvNCr+qKqSllslkJDb1MMgUumRiCKUI2VrdHt2tKuoHIKxR3zrHAhRe7gDCokPACFUcqOwL6wgFhtqtKJ1EzVl8yQBngnmaPDH/VGUHFhWU6i13hW76B1I/hhdI670l0YyJlsscxpBzWtHlgqTRzNX0l9LpWZhBXkKMluAH0JVy1fOfOs/zHJwqEkCmdDQyuuzN0z/B4PCCGQ== renanssilva@MacBook-Pro.local\npackage_update: true\npackage_upgrade: true\npackages:\n  - git\n  - vim\n  - neovim\n  - gcc\n  - make\n  - cmake\n  - libsdl2-dev\n  - libsdl2-ttf-dev\nruncmd:\n  - cd /home/devops\n  - touch I_WAS_HERE\n  - echo \"sudo tail -f -n25 /var/log/cloud-init-output.log\" \u003e ./tail_log.sh\n  - echo \"sudo less /var/log/cloud-init-output.log\" \u003e ./less_log.sh\n  - su devops -c \"echo 'PATH=/home/devops/.local/bin:$PATH' \u003e\u003e ~/.bashrc\"\n  - su devops -c \"echo 'PATH=/home/devops/.poetry/bin:$PATH' \u003e\u003e ~/.bashrc\"\n\n    # Python 3.10 setup\n  - apt install software-properties-common -y\n  - add-apt-repository ppa:deadsnakes/ppa -y\n  - apt update\n  - apt install python3.10-full -y\n  - su devops -c \"python3.10 -m ensurepip --upgrade\"\n  - su devops -c \"python3.10 -m pip install --upgrade pip\"\n\n    # Get gabate\n  - git clone 'https://github.com/h3nnn4n/gabate'\n  - chown -R devops:devops gabate\n  - cd gabate\n\n    ## Gabate deps\n  - git submodule update --init --recursive\n  - cd deps/pcg-c/ \u0026\u0026 make -j 4 \u0026\u0026 cd -\n  - cd deps/cJSON/ \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 cmake .. \u0026\u0026 make -j 4 \u0026\u0026 cd ../../../\n\n    ## Build gabate\n  - make -j 4\n\n    # Worker setup\n  - cd worker\n\n    # Instal poetry and worker deps\n  - su devops -c \"curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3.10 - \"\n  - su devops -l -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry install\"\n\n    # Start worker\n  - cp -v /home/devops/.env .env\n  - su devops -l -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry run celery -A tasks worker --loglevel=INFO --detach -f celery.logs\"\n",
                "content_type": "text/cloud-config",
                "filename": "",
                "merge_type": ""
              }
            ],
            "rendered": "Content-Type: multipart/mixed; boundary=\"MIMEBOUNDARY\"\nMIME-Version: 1.0\r\n\r\n--MIMEBOUNDARY\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/x-shellscript\r\nMime-Version: 1.0\r\n\r\n#!/bin/bash\necho '116.203.218.217' \u003e /opt/db_server_ip\necho 'af800jf' \u003e /opt/rabbitmq_user\necho '89fq948a89fqp' \u003e /opt/rabbitmq_passwd\n\r\n--MIMEBOUNDARY\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/x-shellscript\r\nMime-Version: 1.0\r\n\r\n#!/bin/bash\n\ncd /home/devops/\n\n# Setup secrets\ntouch .env\necho \"BROKER_URL=pyamqp://$(cat /opt/rabbitmq_user):$(cat /opt/rabbitmq_passwd)@$(cat /opt/db_server_ip)\" \u003e\u003e .env\necho \"RESULT_BACKEND=redis://$(cat /opt/db_server_ip)\" \u003e\u003e .env\n\r\n--MIMEBOUNDARY\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/cloud-config\r\nMime-Version: 1.0\r\n\r\n#cloud-config\nusers:\n  - name: devops\n    groups: users, admin\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    shell: /bin/bash\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7E75JwR78Zj0AGf0Hk9VqAs9e37+yOPNNssEdbHM3Uh15BvoHqDTfr8zRO3OsiWBeFmIR0KH8qdwraj1DGGsvnDAwDbi1mQH6V4e/9U269oBFJWKiLAxLUStyRGwK2EZOJvKjT6coic0Hck6I+LUp8QQRMZT8B4UJVk6N4nq0bg0v23dGUm6ULfrMHdJlLGde8Eb+ln/CWjOQXP/4G2UAOGi5PLlftqqJnqsGDS+MfCmNofifjq6NnF65i9JWkrfEVye3Ny3jwEEkBOaojtv9atjE+ExCsmH2BbJYAjEKNjamQwJkJ4iteGZEm88JCOkzRDr0ZEbgac4l7snbRTWt+2rz0UFnzYj00iAnrvQRh1OGgopspSZr7VJEvqdajO24PB7EuNVhG/y4mCpQ7ui1zFLF7X8s1/l6BXuCquiMOtldas5WzgAi1BiyOY3dj6iSEiR182asOsv/VRmmoQGIWQWU1qDQ7fvNCr+qKqSllslkJDb1MMgUumRiCKUI2VrdHt2tKuoHIKxR3zrHAhRe7gDCokPACFUcqOwL6wgFhtqtKJ1EzVl8yQBngnmaPDH/VGUHFhWU6i13hW76B1I/hhdI670l0YyJlsscxpBzWtHlgqTRzNX0l9LpWZhBXkKMluAH0JVy1fOfOs/zHJwqEkCmdDQyuuzN0z/B4PCCGQ== renanssilva@MacBook-Pro.local\npackage_update: true\npackage_upgrade: true\npackages:\n  - git\n  - vim\n  - neovim\n  - gcc\n  - make\n  - cmake\n  - libsdl2-dev\n  - libsdl2-ttf-dev\nruncmd:\n  - cd /home/devops\n  - touch I_WAS_HERE\n  - echo \"sudo tail -f -n25 /var/log/cloud-init-output.log\" \u003e ./tail_log.sh\n  - echo \"sudo less /var/log/cloud-init-output.log\" \u003e ./less_log.sh\n  - su devops -c \"echo 'PATH=/home/devops/.local/bin:$PATH' \u003e\u003e ~/.bashrc\"\n  - su devops -c \"echo 'PATH=/home/devops/.poetry/bin:$PATH' \u003e\u003e ~/.bashrc\"\n\n    # Python 3.10 setup\n  - apt install software-properties-common -y\n  - add-apt-repository ppa:deadsnakes/ppa -y\n  - apt update\n  - apt install python3.10-full -y\n  - su devops -c \"python3.10 -m ensurepip --upgrade\"\n  - su devops -c \"python3.10 -m pip install --upgrade pip\"\n\n    # Get gabate\n  - git clone 'https://github.com/h3nnn4n/gabate'\n  - chown -R devops:devops gabate\n  - cd gabate\n\n    ## Gabate deps\n  - git submodule update --init --recursive\n  - cd deps/pcg-c/ \u0026\u0026 make -j 4 \u0026\u0026 cd -\n  - cd deps/cJSON/ \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 cmake .. \u0026\u0026 make -j 4 \u0026\u0026 cd ../../../\n\n    ## Build gabate\n  - make -j 4\n\n    # Worker setup\n  - cd worker\n\n    # Instal poetry and worker deps\n  - su devops -c \"curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3.10 - \"\n  - su devops -l -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry install\"\n\n    # Start worker\n  - cp -v /home/devops/.env .env\n  - su devops -l -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry run celery -A tasks worker --loglevel=INFO --detach -f celery.logs\"\n\r\n--MIMEBOUNDARY--\r\n"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "part"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "content"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_cloudinit_config",
      "name": "db_config",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "base64_encode": false,
            "gzip": false,
            "id": "1565328579",
            "part": [
              {
                "content": "#!/bin/sh\necho 'af800jf' \u003e /opt/rabbitmq_user\necho '89fq948a89fqp' \u003e /opt/rabbitmq_passwd\n",
                "content_type": "text/x-shellscript",
                "filename": "",
                "merge_type": ""
              },
              {
                "content": "#cloud-config\nusers:\n  - name: devops\n    groups: users, admin\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    shell: /bin/bash\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7E75JwR78Zj0AGf0Hk9VqAs9e37+yOPNNssEdbHM3Uh15BvoHqDTfr8zRO3OsiWBeFmIR0KH8qdwraj1DGGsvnDAwDbi1mQH6V4e/9U269oBFJWKiLAxLUStyRGwK2EZOJvKjT6coic0Hck6I+LUp8QQRMZT8B4UJVk6N4nq0bg0v23dGUm6ULfrMHdJlLGde8Eb+ln/CWjOQXP/4G2UAOGi5PLlftqqJnqsGDS+MfCmNofifjq6NnF65i9JWkrfEVye3Ny3jwEEkBOaojtv9atjE+ExCsmH2BbJYAjEKNjamQwJkJ4iteGZEm88JCOkzRDr0ZEbgac4l7snbRTWt+2rz0UFnzYj00iAnrvQRh1OGgopspSZr7VJEvqdajO24PB7EuNVhG/y4mCpQ7ui1zFLF7X8s1/l6BXuCquiMOtldas5WzgAi1BiyOY3dj6iSEiR182asOsv/VRmmoQGIWQWU1qDQ7fvNCr+qKqSllslkJDb1MMgUumRiCKUI2VrdHt2tKuoHIKxR3zrHAhRe7gDCokPACFUcqOwL6wgFhtqtKJ1EzVl8yQBngnmaPDH/VGUHFhWU6i13hW76B1I/hhdI670l0YyJlsscxpBzWtHlgqTRzNX0l9LpWZhBXkKMluAH0JVy1fOfOs/zHJwqEkCmdDQyuuzN0z/B4PCCGQ== renanssilva@MacBook-Pro.local\npackage_update: true\npackage_upgrade: true\npackages:\n  - git\n  - vim\n  - neovim\n  - gnupg\n  - redis-server\nruncmd:\n  - cd /home/devops\n  - touch I_WAS_HERE\n  - echo \"sudo tail -f -n25 /var/log/cloud-init-output.log\" \u003e ./tail_log.sh\n  - echo \"sudo less /var/log/cloud-init-output.log\" \u003e ./less_log.sh\n  - echo \"started runcmd\" \u003e\u003e /var/log/bootstrap\n\n    # redis\n    # FIXME: Add basic redis auth here\n  - echo \"protected-mode no\" \u003e /etc/redis/redis.conf\n  - systemctl restart redis\n  - echo \"finished settingup redis\" \u003e\u003e /var/log/bootstrap\n\n    # mongo\n  - wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | apt-key add -\n  - echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-5.0.list\n  - apt-get update\n  - apt-get install -y mongodb-org\n  - echo \"finished installing mongo\" \u003e\u003e /var/log/bootstrap\n\n    # rabbitmq\n  - wget -O- https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc | apt-key add -\n  - echo \"deb https://packages.erlang-solutions.com/ubuntu focal contrib\" | tee /etc/apt/sources.list.d/rabbitmq.list\n  - curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.deb.sh | bash\n  - apt-get update\n  - apt-get install -y rabbitmq-server --fix-missing\n  - rabbitmqctl status \u003e /var/log/rabbitmqctl_status 2\u003e /var/log/rabbitmqctl_status_error\n  - echo \"finished installing rabbitmq-server\" \u003e\u003e /var/log/bootstrap\n\n  - echo \"[{rabbit,[{loopback_users,[]},{tcp_listeners,[5672]}]}].\" \u003e /etc/rabbitmq/rabbitmq.config\n  - echo \"finished settingup rabbitmq\" \u003e\u003e /var/log/bootstrap\n\n  - systemctl restart rabbitmq-server\n  - systemctl status rabbitmq-server\n  - echo \"restarted rabbitmq\" \u003e\u003e /var/log/bootstrap\n  - rabbitmqctl add_user $(cat /opt/rabbitmq_user) $(cat /opt/rabbitmq_passwd)\n  - rabbitmqctl set_user_tags $(cat /opt/rabbitmq_user) administrator\n  - rabbitmqctl set_permissions -p / $(cat /opt/rabbitmq_user) \".*\" \".*\" \".*\"\n",
                "content_type": "text/cloud-config",
                "filename": "",
                "merge_type": ""
              }
            ],
            "rendered": "Content-Type: multipart/mixed; boundary=\"MIMEBOUNDARY\"\nMIME-Version: 1.0\r\n\r\n--MIMEBOUNDARY\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/x-shellscript\r\nMime-Version: 1.0\r\n\r\n#!/bin/sh\necho 'af800jf' \u003e /opt/rabbitmq_user\necho '89fq948a89fqp' \u003e /opt/rabbitmq_passwd\n\r\n--MIMEBOUNDARY\r\nContent-Transfer-Encoding: 7bit\r\nContent-Type: text/cloud-config\r\nMime-Version: 1.0\r\n\r\n#cloud-config\nusers:\n  - name: devops\n    groups: users, admin\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    shell: /bin/bash\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7E75JwR78Zj0AGf0Hk9VqAs9e37+yOPNNssEdbHM3Uh15BvoHqDTfr8zRO3OsiWBeFmIR0KH8qdwraj1DGGsvnDAwDbi1mQH6V4e/9U269oBFJWKiLAxLUStyRGwK2EZOJvKjT6coic0Hck6I+LUp8QQRMZT8B4UJVk6N4nq0bg0v23dGUm6ULfrMHdJlLGde8Eb+ln/CWjOQXP/4G2UAOGi5PLlftqqJnqsGDS+MfCmNofifjq6NnF65i9JWkrfEVye3Ny3jwEEkBOaojtv9atjE+ExCsmH2BbJYAjEKNjamQwJkJ4iteGZEm88JCOkzRDr0ZEbgac4l7snbRTWt+2rz0UFnzYj00iAnrvQRh1OGgopspSZr7VJEvqdajO24PB7EuNVhG/y4mCpQ7ui1zFLF7X8s1/l6BXuCquiMOtldas5WzgAi1BiyOY3dj6iSEiR182asOsv/VRmmoQGIWQWU1qDQ7fvNCr+qKqSllslkJDb1MMgUumRiCKUI2VrdHt2tKuoHIKxR3zrHAhRe7gDCokPACFUcqOwL6wgFhtqtKJ1EzVl8yQBngnmaPDH/VGUHFhWU6i13hW76B1I/hhdI670l0YyJlsscxpBzWtHlgqTRzNX0l9LpWZhBXkKMluAH0JVy1fOfOs/zHJwqEkCmdDQyuuzN0z/B4PCCGQ== renanssilva@MacBook-Pro.local\npackage_update: true\npackage_upgrade: true\npackages:\n  - git\n  - vim\n  - neovim\n  - gnupg\n  - redis-server\nruncmd:\n  - cd /home/devops\n  - touch I_WAS_HERE\n  - echo \"sudo tail -f -n25 /var/log/cloud-init-output.log\" \u003e ./tail_log.sh\n  - echo \"sudo less /var/log/cloud-init-output.log\" \u003e ./less_log.sh\n  - echo \"started runcmd\" \u003e\u003e /var/log/bootstrap\n\n    # redis\n    # FIXME: Add basic redis auth here\n  - echo \"protected-mode no\" \u003e /etc/redis/redis.conf\n  - systemctl restart redis\n  - echo \"finished settingup redis\" \u003e\u003e /var/log/bootstrap\n\n    # mongo\n  - wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | apt-key add -\n  - echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-5.0.list\n  - apt-get update\n  - apt-get install -y mongodb-org\n  - echo \"finished installing mongo\" \u003e\u003e /var/log/bootstrap\n\n    # rabbitmq\n  - wget -O- https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc | apt-key add -\n  - echo \"deb https://packages.erlang-solutions.com/ubuntu focal contrib\" | tee /etc/apt/sources.list.d/rabbitmq.list\n  - curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.deb.sh | bash\n  - apt-get update\n  - apt-get install -y rabbitmq-server --fix-missing\n  - rabbitmqctl status \u003e /var/log/rabbitmqctl_status 2\u003e /var/log/rabbitmqctl_status_error\n  - echo \"finished installing rabbitmq-server\" \u003e\u003e /var/log/bootstrap\n\n  - echo \"[{rabbit,[{loopback_users,[]},{tcp_listeners,[5672]}]}].\" \u003e /etc/rabbitmq/rabbitmq.config\n  - echo \"finished settingup rabbitmq\" \u003e\u003e /var/log/bootstrap\n\n  - systemctl restart rabbitmq-server\n  - systemctl status rabbitmq-server\n  - echo \"restarted rabbitmq\" \u003e\u003e /var/log/bootstrap\n  - rabbitmqctl add_user $(cat /opt/rabbitmq_user) $(cat /opt/rabbitmq_passwd)\n  - rabbitmqctl set_user_tags $(cat /opt/rabbitmq_user) administrator\n  - rabbitmqctl set_permissions -p / $(cat /opt/rabbitmq_user) \".*\" \".*\" \".*\"\n\r\n--MIMEBOUNDARY--\r\n"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "part"
              },
              {
                "type": "index",
                "value": {
                  "value": 0,
                  "type": "number"
                }
              },
              {
                "type": "get_attr",
                "value": "content"
              }
            ]
          ]
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "db_user_data",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "3eea2cc799bf64ce05a228f3747619d1bbe2494157e9f003bb81e668859dadd7",
            "rendered": "#cloud-config\nusers:\n  - name: devops\n    groups: users, admin\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    shell: /bin/bash\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7E75JwR78Zj0AGf0Hk9VqAs9e37+yOPNNssEdbHM3Uh15BvoHqDTfr8zRO3OsiWBeFmIR0KH8qdwraj1DGGsvnDAwDbi1mQH6V4e/9U269oBFJWKiLAxLUStyRGwK2EZOJvKjT6coic0Hck6I+LUp8QQRMZT8B4UJVk6N4nq0bg0v23dGUm6ULfrMHdJlLGde8Eb+ln/CWjOQXP/4G2UAOGi5PLlftqqJnqsGDS+MfCmNofifjq6NnF65i9JWkrfEVye3Ny3jwEEkBOaojtv9atjE+ExCsmH2BbJYAjEKNjamQwJkJ4iteGZEm88JCOkzRDr0ZEbgac4l7snbRTWt+2rz0UFnzYj00iAnrvQRh1OGgopspSZr7VJEvqdajO24PB7EuNVhG/y4mCpQ7ui1zFLF7X8s1/l6BXuCquiMOtldas5WzgAi1BiyOY3dj6iSEiR182asOsv/VRmmoQGIWQWU1qDQ7fvNCr+qKqSllslkJDb1MMgUumRiCKUI2VrdHt2tKuoHIKxR3zrHAhRe7gDCokPACFUcqOwL6wgFhtqtKJ1EzVl8yQBngnmaPDH/VGUHFhWU6i13hW76B1I/hhdI670l0YyJlsscxpBzWtHlgqTRzNX0l9LpWZhBXkKMluAH0JVy1fOfOs/zHJwqEkCmdDQyuuzN0z/B4PCCGQ== renanssilva@MacBook-Pro.local\npackage_update: true\npackage_upgrade: true\npackages:\n  - git\n  - vim\n  - neovim\n  - gnupg\n  - redis-server\nruncmd:\n  - cd /home/devops\n  - touch I_WAS_HERE\n  - echo \"sudo tail -f -n25 /var/log/cloud-init-output.log\" \u003e ./tail_log.sh\n  - echo \"sudo less /var/log/cloud-init-output.log\" \u003e ./less_log.sh\n  - echo \"started runcmd\" \u003e\u003e /var/log/bootstrap\n\n    # redis\n    # FIXME: Add basic redis auth here\n  - echo \"protected-mode no\" \u003e /etc/redis/redis.conf\n  - systemctl restart redis\n  - echo \"finished settingup redis\" \u003e\u003e /var/log/bootstrap\n\n    # mongo\n  - wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | apt-key add -\n  - echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-5.0.list\n  - apt-get update\n  - apt-get install -y mongodb-org\n  - echo \"finished installing mongo\" \u003e\u003e /var/log/bootstrap\n\n    # rabbitmq\n  - wget -O- https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc | apt-key add -\n  - echo \"deb https://packages.erlang-solutions.com/ubuntu focal contrib\" | tee /etc/apt/sources.list.d/rabbitmq.list\n  - curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.deb.sh | bash\n  - apt-get update\n  - apt-get install -y rabbitmq-server --fix-missing\n  - rabbitmqctl status \u003e /var/log/rabbitmqctl_status 2\u003e /var/log/rabbitmqctl_status_error\n  - echo \"finished installing rabbitmq-server\" \u003e\u003e /var/log/bootstrap\n\n  - echo \"[{rabbit,[{loopback_users,[]},{tcp_listeners,[5672]}]}].\" \u003e /etc/rabbitmq/rabbitmq.config\n  - echo \"finished settingup rabbitmq\" \u003e\u003e /var/log/bootstrap\n\n  - systemctl restart rabbitmq-server\n  - systemctl status rabbitmq-server\n  - echo \"restarted rabbitmq\" \u003e\u003e /var/log/bootstrap\n  - rabbitmqctl add_user $(cat /opt/rabbitmq_user) $(cat /opt/rabbitmq_passwd)\n  - rabbitmqctl set_user_tags $(cat /opt/rabbitmq_user) administrator\n  - rabbitmqctl set_permissions -p / $(cat /opt/rabbitmq_user) \".*\" \".*\" \".*\"\n",
            "template": "#cloud-config\nusers:\n  - name: devops\n    groups: users, admin\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    shell: /bin/bash\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7E75JwR78Zj0AGf0Hk9VqAs9e37+yOPNNssEdbHM3Uh15BvoHqDTfr8zRO3OsiWBeFmIR0KH8qdwraj1DGGsvnDAwDbi1mQH6V4e/9U269oBFJWKiLAxLUStyRGwK2EZOJvKjT6coic0Hck6I+LUp8QQRMZT8B4UJVk6N4nq0bg0v23dGUm6ULfrMHdJlLGde8Eb+ln/CWjOQXP/4G2UAOGi5PLlftqqJnqsGDS+MfCmNofifjq6NnF65i9JWkrfEVye3Ny3jwEEkBOaojtv9atjE+ExCsmH2BbJYAjEKNjamQwJkJ4iteGZEm88JCOkzRDr0ZEbgac4l7snbRTWt+2rz0UFnzYj00iAnrvQRh1OGgopspSZr7VJEvqdajO24PB7EuNVhG/y4mCpQ7ui1zFLF7X8s1/l6BXuCquiMOtldas5WzgAi1BiyOY3dj6iSEiR182asOsv/VRmmoQGIWQWU1qDQ7fvNCr+qKqSllslkJDb1MMgUumRiCKUI2VrdHt2tKuoHIKxR3zrHAhRe7gDCokPACFUcqOwL6wgFhtqtKJ1EzVl8yQBngnmaPDH/VGUHFhWU6i13hW76B1I/hhdI670l0YyJlsscxpBzWtHlgqTRzNX0l9LpWZhBXkKMluAH0JVy1fOfOs/zHJwqEkCmdDQyuuzN0z/B4PCCGQ== renanssilva@MacBook-Pro.local\npackage_update: true\npackage_upgrade: true\npackages:\n  - git\n  - vim\n  - neovim\n  - gnupg\n  - redis-server\nruncmd:\n  - cd /home/devops\n  - touch I_WAS_HERE\n  - echo \"sudo tail -f -n25 /var/log/cloud-init-output.log\" \u003e ./tail_log.sh\n  - echo \"sudo less /var/log/cloud-init-output.log\" \u003e ./less_log.sh\n  - echo \"started runcmd\" \u003e\u003e /var/log/bootstrap\n\n    # redis\n    # FIXME: Add basic redis auth here\n  - echo \"protected-mode no\" \u003e /etc/redis/redis.conf\n  - systemctl restart redis\n  - echo \"finished settingup redis\" \u003e\u003e /var/log/bootstrap\n\n    # mongo\n  - wget -qO - https://www.mongodb.org/static/pgp/server-5.0.asc | apt-key add -\n  - echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/5.0 multiverse\" | tee /etc/apt/sources.list.d/mongodb-org-5.0.list\n  - apt-get update\n  - apt-get install -y mongodb-org\n  - echo \"finished installing mongo\" \u003e\u003e /var/log/bootstrap\n\n    # rabbitmq\n  - wget -O- https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc | apt-key add -\n  - echo \"deb https://packages.erlang-solutions.com/ubuntu focal contrib\" | tee /etc/apt/sources.list.d/rabbitmq.list\n  - curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.deb.sh | bash\n  - apt-get update\n  - apt-get install -y rabbitmq-server --fix-missing\n  - rabbitmqctl status \u003e /var/log/rabbitmqctl_status 2\u003e /var/log/rabbitmqctl_status_error\n  - echo \"finished installing rabbitmq-server\" \u003e\u003e /var/log/bootstrap\n\n  - echo \"[{rabbit,[{loopback_users,[]},{tcp_listeners,[5672]}]}].\" \u003e /etc/rabbitmq/rabbitmq.config\n  - echo \"finished settingup rabbitmq\" \u003e\u003e /var/log/bootstrap\n\n  - systemctl restart rabbitmq-server\n  - systemctl status rabbitmq-server\n  - echo \"restarted rabbitmq\" \u003e\u003e /var/log/bootstrap\n  - rabbitmqctl add_user $(cat /opt/rabbitmq_user) $(cat /opt/rabbitmq_passwd)\n  - rabbitmqctl set_user_tags $(cat /opt/rabbitmq_user) administrator\n  - rabbitmqctl set_permissions -p / $(cat /opt/rabbitmq_user) \".*\" \".*\" \".*\"\n",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "setup_worker_env",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "1876b688e2f254da11f897c207928fa41677100a6cc09098e98009802b0b33fc",
            "rendered": "#!/bin/bash\n\ncd /home/devops/\n\n# Setup secrets\ntouch .env\necho \"BROKER_URL=pyamqp://$(cat /opt/rabbitmq_user):$(cat /opt/rabbitmq_passwd)@$(cat /opt/db_server_ip)\" \u003e\u003e .env\necho \"RESULT_BACKEND=redis://$(cat /opt/db_server_ip)\" \u003e\u003e .env\n",
            "template": "#!/bin/bash\n\ncd /home/devops/\n\n# Setup secrets\ntouch .env\necho \"BROKER_URL=pyamqp://$(cat /opt/rabbitmq_user):$(cat /opt/rabbitmq_passwd)@$(cat /opt/db_server_ip)\" \u003e\u003e .env\necho \"RESULT_BACKEND=redis://$(cat /opt/db_server_ip)\" \u003e\u003e .env\n",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "data",
      "type": "template_file",
      "name": "user_data",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "abcf3de277ee18f040b4ce0fdd2a4e95d21b748f36ccf4fd28dd21870bcfb370",
            "rendered": "#cloud-config\nusers:\n  - name: devops\n    groups: users, admin\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    shell: /bin/bash\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7E75JwR78Zj0AGf0Hk9VqAs9e37+yOPNNssEdbHM3Uh15BvoHqDTfr8zRO3OsiWBeFmIR0KH8qdwraj1DGGsvnDAwDbi1mQH6V4e/9U269oBFJWKiLAxLUStyRGwK2EZOJvKjT6coic0Hck6I+LUp8QQRMZT8B4UJVk6N4nq0bg0v23dGUm6ULfrMHdJlLGde8Eb+ln/CWjOQXP/4G2UAOGi5PLlftqqJnqsGDS+MfCmNofifjq6NnF65i9JWkrfEVye3Ny3jwEEkBOaojtv9atjE+ExCsmH2BbJYAjEKNjamQwJkJ4iteGZEm88JCOkzRDr0ZEbgac4l7snbRTWt+2rz0UFnzYj00iAnrvQRh1OGgopspSZr7VJEvqdajO24PB7EuNVhG/y4mCpQ7ui1zFLF7X8s1/l6BXuCquiMOtldas5WzgAi1BiyOY3dj6iSEiR182asOsv/VRmmoQGIWQWU1qDQ7fvNCr+qKqSllslkJDb1MMgUumRiCKUI2VrdHt2tKuoHIKxR3zrHAhRe7gDCokPACFUcqOwL6wgFhtqtKJ1EzVl8yQBngnmaPDH/VGUHFhWU6i13hW76B1I/hhdI670l0YyJlsscxpBzWtHlgqTRzNX0l9LpWZhBXkKMluAH0JVy1fOfOs/zHJwqEkCmdDQyuuzN0z/B4PCCGQ== renanssilva@MacBook-Pro.local\npackage_update: true\npackage_upgrade: true\npackages:\n  - git\n  - vim\n  - neovim\n  - gcc\n  - make\n  - cmake\n  - libsdl2-dev\n  - libsdl2-ttf-dev\nruncmd:\n  - cd /home/devops\n  - touch I_WAS_HERE\n  - echo \"sudo tail -f -n25 /var/log/cloud-init-output.log\" \u003e ./tail_log.sh\n  - echo \"sudo less /var/log/cloud-init-output.log\" \u003e ./less_log.sh\n  - su devops -c \"echo 'PATH=/home/devops/.local/bin:$PATH' \u003e\u003e ~/.bashrc\"\n  - su devops -c \"echo 'PATH=/home/devops/.poetry/bin:$PATH' \u003e\u003e ~/.bashrc\"\n\n    # Python 3.10 setup\n  - apt install software-properties-common -y\n  - add-apt-repository ppa:deadsnakes/ppa -y\n  - apt update\n  - apt install python3.10-full -y\n  - su devops -c \"python3.10 -m ensurepip --upgrade\"\n  - su devops -c \"python3.10 -m pip install --upgrade pip\"\n\n    # Get gabate\n  - git clone 'https://github.com/h3nnn4n/gabate'\n  - chown -R devops:devops gabate\n  - cd gabate\n\n    ## Gabate deps\n  - git submodule update --init --recursive\n  - cd deps/pcg-c/ \u0026\u0026 make -j 4 \u0026\u0026 cd -\n  - cd deps/cJSON/ \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 cmake .. \u0026\u0026 make -j 4 \u0026\u0026 cd ../../../\n\n    ## Build gabate\n  - make -j 4\n\n    # Worker setup\n  - cd worker\n\n    # Instal poetry and worker deps\n  - su devops -c \"curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3.10 - \"\n  - su devops -l -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry install\"\n\n    # Start worker\n  - cp -v /home/devops/.env .env\n  - su devops -l -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry run celery -A tasks worker --loglevel=INFO --detach -f celery.logs\"\n",
            "template": "#cloud-config\nusers:\n  - name: devops\n    groups: users, admin\n    sudo: ALL=(ALL) NOPASSWD:ALL\n    shell: /bin/bash\n    ssh_authorized_keys:\n      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7E75JwR78Zj0AGf0Hk9VqAs9e37+yOPNNssEdbHM3Uh15BvoHqDTfr8zRO3OsiWBeFmIR0KH8qdwraj1DGGsvnDAwDbi1mQH6V4e/9U269oBFJWKiLAxLUStyRGwK2EZOJvKjT6coic0Hck6I+LUp8QQRMZT8B4UJVk6N4nq0bg0v23dGUm6ULfrMHdJlLGde8Eb+ln/CWjOQXP/4G2UAOGi5PLlftqqJnqsGDS+MfCmNofifjq6NnF65i9JWkrfEVye3Ny3jwEEkBOaojtv9atjE+ExCsmH2BbJYAjEKNjamQwJkJ4iteGZEm88JCOkzRDr0ZEbgac4l7snbRTWt+2rz0UFnzYj00iAnrvQRh1OGgopspSZr7VJEvqdajO24PB7EuNVhG/y4mCpQ7ui1zFLF7X8s1/l6BXuCquiMOtldas5WzgAi1BiyOY3dj6iSEiR182asOsv/VRmmoQGIWQWU1qDQ7fvNCr+qKqSllslkJDb1MMgUumRiCKUI2VrdHt2tKuoHIKxR3zrHAhRe7gDCokPACFUcqOwL6wgFhtqtKJ1EzVl8yQBngnmaPDH/VGUHFhWU6i13hW76B1I/hhdI670l0YyJlsscxpBzWtHlgqTRzNX0l9LpWZhBXkKMluAH0JVy1fOfOs/zHJwqEkCmdDQyuuzN0z/B4PCCGQ== renanssilva@MacBook-Pro.local\npackage_update: true\npackage_upgrade: true\npackages:\n  - git\n  - vim\n  - neovim\n  - gcc\n  - make\n  - cmake\n  - libsdl2-dev\n  - libsdl2-ttf-dev\nruncmd:\n  - cd /home/devops\n  - touch I_WAS_HERE\n  - echo \"sudo tail -f -n25 /var/log/cloud-init-output.log\" \u003e ./tail_log.sh\n  - echo \"sudo less /var/log/cloud-init-output.log\" \u003e ./less_log.sh\n  - su devops -c \"echo 'PATH=/home/devops/.local/bin:$PATH' \u003e\u003e ~/.bashrc\"\n  - su devops -c \"echo 'PATH=/home/devops/.poetry/bin:$PATH' \u003e\u003e ~/.bashrc\"\n\n    # Python 3.10 setup\n  - apt install software-properties-common -y\n  - add-apt-repository ppa:deadsnakes/ppa -y\n  - apt update\n  - apt install python3.10-full -y\n  - su devops -c \"python3.10 -m ensurepip --upgrade\"\n  - su devops -c \"python3.10 -m pip install --upgrade pip\"\n\n    # Get gabate\n  - git clone 'https://github.com/h3nnn4n/gabate'\n  - chown -R devops:devops gabate\n  - cd gabate\n\n    ## Gabate deps\n  - git submodule update --init --recursive\n  - cd deps/pcg-c/ \u0026\u0026 make -j 4 \u0026\u0026 cd -\n  - cd deps/cJSON/ \u0026\u0026 mkdir build \u0026\u0026 cd build \u0026\u0026 cmake .. \u0026\u0026 make -j 4 \u0026\u0026 cd ../../../\n\n    ## Build gabate\n  - make -j 4\n\n    # Worker setup\n  - cd worker\n\n    # Instal poetry and worker deps\n  - su devops -c \"curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3.10 - \"\n  - su devops -l -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry install\"\n\n    # Start worker\n  - cp -v /home/devops/.env .env\n  - su devops -l -c \"cd /home/devops/gabate/worker/ \u0026\u0026 /home/devops/.poetry/bin/poetry run celery -A tasks worker --loglevel=INFO --detach -f celery.logs\"\n",
            "vars": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcloud_server",
      "name": "db_server",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "backup_window": "",
            "backups": false,
            "datacenter": "nbg1-dc3",
            "delete_protection": false,
            "firewall_ids": [],
            "id": "15603045",
            "image": "ubuntu-20.04",
            "ipv4_address": "116.203.218.217",
            "ipv6_address": "2a01:4f8:1c1c:76eb::1",
            "ipv6_network": "2a01:4f8:1c1c:76eb::/64",
            "iso": null,
            "keep_disk": false,
            "labels": {
              "type": "db_server"
            },
            "location": "nbg1",
            "name": "db-server",
            "network": [],
            "placement_group_id": null,
            "rebuild_protection": false,
            "rescue": null,
            "server_type": "cx11",
            "ssh_keys": [
              "4717543"
            ],
            "status": "running",
            "timeouts": null,
            "user_data": "BovyjH6FYk8W5hQoVFhye1texkg="
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.template_cloudinit_config.db_config",
            "data.template_file.db_user_data",
            "hcloud_ssh_key.default",
            "data.aws_secretsmanager_secret_version.creds"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcloud_server",
      "name": "worker",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "backup_window": "",
            "backups": false,
            "datacenter": "nbg1-dc3",
            "delete_protection": false,
            "firewall_ids": [],
            "id": "15603598",
            "image": "ubuntu-20.04",
            "ipv4_address": "116.203.179.134",
            "ipv6_address": "2a01:4f8:1c0c:6e75::1",
            "ipv6_network": "2a01:4f8:1c0c:6e75::/64",
            "iso": null,
            "keep_disk": false,
            "labels": {
              "type": "workers"
            },
            "location": "nbg1",
            "name": "worker-0",
            "network": [],
            "placement_group_id": null,
            "rebuild_protection": false,
            "rescue": null,
            "server_type": "cx11",
            "ssh_keys": [
              "4717543"
            ],
            "status": "running",
            "timeouts": null,
            "user_data": "HpDuOGwJqXRQOg7/bp8i1lDpbig="
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo1NDAwMDAwMDAwMDAwfX0=",
          "dependencies": [
            "data.template_cloudinit_config.config",
            "hcloud_ssh_key.default"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "hcloud_ssh_key",
      "name": "default",
      "provider": "provider[\"registry.terraform.io/hetznercloud/hcloud\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "fingerprint": "18:8a:5b:c8:46:e8:f6:12:66:6b:00:ff:46:6f:cb:f7",
            "id": "4717543",
            "labels": {},
            "name": "hetzner_key",
            "public_key": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7E75JwR78Zj0AGf0Hk9VqAs9e37+yOPNNssEdbHM3Uh15BvoHqDTfr8zRO3OsiWBeFmIR0KH8qdwraj1DGGsvnDAwDbi1mQH6V4e/9U269oBFJWKiLAxLUStyRGwK2EZOJvKjT6coic0Hck6I+LUp8QQRMZT8B4UJVk6N4nq0bg0v23dGUm6ULfrMHdJlLGde8Eb+ln/CWjOQXP/4G2UAOGi5PLlftqqJnqsGDS+MfCmNofifjq6NnF65i9JWkrfEVye3Ny3jwEEkBOaojtv9atjE+ExCsmH2BbJYAjEKNjamQwJkJ4iteGZEm88JCOkzRDr0ZEbgac4l7snbRTWt+2rz0UFnzYj00iAnrvQRh1OGgopspSZr7VJEvqdajO24PB7EuNVhG/y4mCpQ7ui1zFLF7X8s1/l6BXuCquiMOtldas5WzgAi1BiyOY3dj6iSEiR182asOsv/VRmmoQGIWQWU1qDQ7fvNCr+qKqSllslkJDb1MMgUumRiCKUI2VrdHt2tKuoHIKxR3zrHAhRe7gDCokPACFUcqOwL6wgFhtqtKJ1EzVl8yQBngnmaPDH/VGUHFhWU6i13hW76B1I/hhdI670l0YyJlsscxpBzWtHlgqTRzNX0l9LpWZhBXkKMluAH0JVy1fOfOs/zHJwqEkCmdDQyuuzN0z/B4PCCGQ== renanssilva@MacBook-Pro.local\n"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    }
  ]
}
